---
- hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - aws_keys.yml
  tasks:
  - name: Create a security group
    ec2_group:
      name: your-security-group
      description: your-security-group-name
      region: us-west-1
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0

  - name: Launch the new EC2 Instance
    ec2_instance:
      name: name-your-ec2
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      instance_type: xx.xxxx
      image_id: ami-xxxx
      wait: yes
      region: us-west-1
      detailed_monitoring: no
      network:
        assign_public_ip: true
        security_group: your-securtiy-group
      key_name: your-key-pair
      termination_protection: no
      state: running
      wait_timeout: 300
    register: ec2

  - name: Ensure Key is Not Publicly Viewable
    file:
      path: /path/to/pem
      mode: '0400'
    delegate_to: localhost

  - name: Add the newly created host so that we can further contact it
    add_host:
      name: "{{ item.public_ip_address }}"
      groups: Launched
    with_items: "{{ ec2.instances }}"

  - name: Wait for SSH to come up
    wait_for:
      host: "{{ item.public_dns_name }}"
      port: 22
      state: started
    with_items: "{{ ec2.instances }}"

- hosts: Launched
  remote_user: ubuntu
  become: yes
  tasks:
  - name: Update and upgrade apt packages
    become: yes
    apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
